name: Deploy eldik_map to Google Cloud VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Чекаут кода
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Установка Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Установка Bun (локально)
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
          bun --version

      # 4. Кэш зависимостей Bun
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # 5. Установка зависимостей (локально)
      - name: Install dependencies
        run: bun install

      # 6. Проверка сборки (локально)
      - name: Build frontend
        run: bun run build

      # 7. Настройка SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          echo "SSH setup completed"

      # 8. Деплой на сервер
      - name: Deploy to VM
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST <<EOF
            echo "Connected to VM"

            REPO_DIR="/home/$SERVER_USER/rsk_taxi/eldik-map"

            if [ ! -d "\$REPO_DIR" ]; then
              echo "Directory not found. Cloning repository..."
              git clone git@github.com:EmirlanDogdurbaev/eldik-map.git \$REPO_DIR || {
                echo "Error: Git clone failed"
                exit 1
              }
            fi

            cd \$REPO_DIR || {
              echo "Error: Directory change failed"
              exit 1
            }

            git pull origin main || {
              echo "Error: Git pull failed"
              exit 1
            }

            if ! command -v bun >/dev/null 2>&1; then
              echo "Installing Bun..."
              curl -fsSL https://bun.sh/install | bash
              export PATH="\$HOME/.bun/bin:\$PATH"
            fi

            export PATH="\$HOME/.bun/bin:\$PATH"

            bun install || {
              echo "Error: Bun install failed"
              exit 1
            }

            bun run build || {
              echo "Error: Build failed"
              exit 1
            }

            sudo rm -rf /var/www/frontend/dist/*
            sudo mkdir -p /var/www/frontend/dist
            sudo cp -r dist/* /var/www/frontend/dist/ || {
              echo "Error: Copying files failed"
              exit 1
            }

            sudo chmod -R 755 /var/www/frontend/dist
            sudo chown -R www-data:www-data /var/www/frontend/dist
            sudo systemctl reload nginx || {
              echo "Error: Nginx reload failed"
              exit 1
            }

            echo "Deployment completed"
          EOF
